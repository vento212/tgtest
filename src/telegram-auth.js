// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram WebApp
class TelegramAuth {
    constructor() {
        console.log('üîç TelegramAuth constructor - –ø—Ä–æ–≤–µ—Ä—è–µ–º Telegram WebApp');
        console.log('üîç window.Telegram:', !!window.Telegram);
        console.log('üîç window.Telegram?.WebApp:', !!window.Telegram?.WebApp);
        
        this.tg = window.Telegram?.WebApp;
        this.user = null;
        this.initData = null;
        this.initDataUnsafe = null;
        
        if (this.tg) {
            console.log('‚úÖ Telegram WebApp –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ');
        } else {
            console.warn('‚ö†Ô∏è Telegram WebApp –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ');
            
            // –°–æ–∑–¥–∞–µ–º fallback –¥–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏
            if (window.location.href.includes('netlify.app')) {
                console.log('üîß –°–æ–∑–¥–∞–µ–º fallback –¥–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏');
                this.tg = {
                    platform: 'web',
                    version: '1.0',
                    colorScheme: 'dark',
                    expand: () => console.log('expand called'),
                    enableClosingConfirmation: () => console.log('enableClosingConfirmation called'),
                    initDataUnsafe: {
                        user: {
                            id: Date.now(),
                            first_name: 'Web',
                            last_name: 'User',
                            username: 'web_user',
                            language_code: 'ru'
                        },
                        hash: 'web_fallback_hash'
                    },
                    initData: JSON.stringify({
                        user: {
                            id: Date.now(),
                            first_name: 'Web',
                            last_name: 'User',
                            username: 'web_user',
                            language_code: 'ru'
                        }
                    })
                };
                console.log('‚úÖ Fallback Telegram WebApp —Å–æ–∑–¥–∞–Ω');
            }
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
    init() {
        console.log('üîç init() - –Ω–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
        console.log('üîç this.tg:', !!this.tg);
        console.log('üîç window.Telegram:', !!window.Telegram);
        console.log('üîç window.Telegram?.WebApp:', !!window.Telegram?.WebApp);
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ tg –Ω–µ –Ω–∞–π–¥–µ–Ω
        if (!this.tg && window.Telegram?.WebApp) {
            console.log('üîß –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram WebApp');
            this.tg = window.Telegram.WebApp;
        }
        
        if (!this.tg) {
            console.warn('‚ö†Ô∏è Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
            console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã:', {
                window: !!window,
                Telegram: !!window.Telegram,
                WebApp: !!window.Telegram?.WebApp
            });
            return false;
        }

        try {
            // –†–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
            this.tg.expand();
            
            // –í–∫–ª—é—á–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ —Å–≤–∞–π–ø—É
            this.tg.enableClosingConfirmation();
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
            this.user = this.tg.initDataUnsafe?.user || this.tg.initDataUnsafe?.user_info;
            this.initData = this.tg.initData;
            this.initDataUnsafe = this.tg.initDataUnsafe;
            
            // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            console.log('üîç –û—Ç–ª–∞–¥–∫–∞ Telegram WebApp:', {
                tg: !!this.tg,
                initData: !!this.initData,
                initDataUnsafe: !!this.initDataUnsafe,
                user: this.user,
                platform: this.tg.platform,
                version: this.tg.version,
                colorScheme: this.tg.colorScheme
            });
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if (!this.user) {
                console.warn('‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
                console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', this.initDataUnsafe);
                
                // –í –≤–µ–±-–≤–µ—Ä—Å–∏–∏ Telegram —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (this.tg && this.tg.platform === 'web') {
                    console.log('üîß –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏');
                    this.user = {
                        id: Date.now(),
                        first_name: 'Web',
                        last_name: 'User',
                        username: 'web_user',
                        language_code: 'ru'
                    };
                } else {
                    return false;
                }
            }
            
            console.log('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', {
                user: this.user,
                platform: this.tg.platform,
                version: this.tg.version
            });
            
            return true;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:', error);
            return false;
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getUser() {
        return this.user;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram
    isTelegramApp() {
        return !!this.tg;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    getAuthData() {
        console.log('üîç getAuthData - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö:', {
            tg: !!this.tg,
            initData: this.initData,
            initDataUnsafe: this.initDataUnsafe,
            user: this.user
        });

        if (!this.tg) {
            console.warn('‚ö†Ô∏è Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
            return null;
        }

        // –ï—Å–ª–∏ –Ω–µ—Ç initData, –ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –∏–∑ user
        if (!this.initData && this.user) {
            console.log('üîß –°–æ–∑–¥–∞–µ–º initData –∏–∑ user –¥–∞–Ω–Ω—ã—Ö');
            const userData = {
                user: this.user,
                hash: this.tg.initDataUnsafe?.hash || ''
            };
            return {
                telegramData: JSON.stringify(userData),
                telegramHash: this.tg.initDataUnsafe?.hash || ''
            };
        }

        if (!this.initData) {
            console.warn('‚ö†Ô∏è –ù–µ—Ç initData –∏ user –¥–∞–Ω–Ω—ã—Ö');
            return null;
        }

        return {
            telegramData: this.initData,
            telegramHash: this.tg.initDataUnsafe?.hash || ''
        };
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    getAuthHeaders() {
        const authData = this.getAuthData();
        console.log('üîç getAuthHeaders - –¥–∞–Ω–Ω—ã–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', authData);
        
        if (!authData) {
            console.warn('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
            return {};
        }

        return {
            'X-Telegram-Data': authData.telegramData,
            'X-Telegram-Hash': authData.telegramHash,
            'Content-Type': 'application/json'
        };
    }

    // –ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –∫–Ω–æ–ø–∫–∏ Telegram
    showMainButton(text, callback) {
        if (!this.tg) return;
        
        this.tg.MainButton.setText(text);
        this.tg.MainButton.onClick(callback);
        this.tg.MainButton.show();
    }

    // –°–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ Telegram
    hideMainButton() {
        if (!this.tg) return;
        this.tg.MainButton.hide();
    }

    // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    showAlert(message) {
        if (!this.tg) {
            alert(message);
            return;
        }
        this.tg.showAlert(message);
    }

    // –ü–æ–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    showConfirm(message, callback) {
        if (!this.tg) {
            const result = confirm(message);
            callback(result);
            return;
        }
        this.tg.showConfirm(message, callback);
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    close() {
        if (!this.tg) return;
        this.tg.close();
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–º—ã
    getTheme() {
        if (!this.tg) return 'light';
        return this.tg.colorScheme || 'light';
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ç–µ–º—ã
    getThemeParams() {
        if (!this.tg) return {};
        return this.tg.themeParams || {};
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const telegramAuth = new TelegramAuth();

export default telegramAuth; 